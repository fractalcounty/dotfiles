# global script constants
set -g TMODLOADER_DIR "$HOME/Library/Application Support/Steam/steamapps/common/tModLoader"
set -g TERRARIA_APP "$HOME/Library/Application Support/Steam/steamapps/common/Terraria/Terraria.app"
set -g DOTNET_VERSION "8.0.0"
set -g DOTNET_ARCH osx-arm64
set -g DOTNET_URL "https://dotnetcli.azureedge.net/dotnet/Runtime/$DOTNET_VERSION/dotnet-runtime-$DOTNET_VERSION-$DOTNET_ARCH.tar.gz"

function __install_tmodloader_arm -a force
    # verify we're on arm64 mac
    if test (uname -sm) != "Darwin arm64"
        gum log -l error "This script only works on Apple Silicon Macs"
        return 1
    end

    # ensure terraria is installed and native
    if not test -d "$TERRARIA_APP"
        gum log -l error "Terraria not found at $TERRARIA_APP"
        return 1
    end

    # check if terraria is native by checking binary
    if not file "$TERRARIA_APP/Contents/MacOS/Terraria.bin.osx" | grep -q arm64
        gum log -l warn "Terraria is not running natively. Installing native version first..."
        terraria --force
    end

    # copy native libraries from terraria to tmodloader
    set -l native_libs
    set -a native_libs "libSDL2-2.0.0.dylib"
    set -a native_libs "libFNA3D.0.dylib"
    set -a native_libs "libtheorafile.dylib"
    set -a native_libs "libFAudio.0.dylib"

    for lib in $native_libs
        set -l src "$TERRARIA_APP/Contents/MacOS/osx/$lib"
        set -l dst "$TMODLOADER_DIR/Libraries/Native/OSX/$lib"

        if not test -f "$src"
            gum log -l error "Missing native library: $src"
            return 1
        end

        gum log -l info "Copying $lib..."
        cp -f "$src" "$dst"
    end

    # create monoconfig for native libraries
    echo '<configuration>
        <dllmap dll="SDL2" target="libSDL2-2.0.0.dylib"/>
        <dllmap dll="FNA3D" target="libFNA3D.0.dylib"/>
        <dllmap dll="FAudio" target="libFAudio.0.dylib"/>
        <dllmap dll="theorafile" target="libtheorafile.dylib"/>
    </configuration>' >"$TMODLOADER_DIR/MonoConfig"

    # create marker file
    touch "$TMODLOADER_DIR/.arm_native"

    # install native arm64 dotnet runtime
    set -l dotnet_dir "$TMODLOADER_DIR/dotnet"

    if test "$force" = --force; or not test -d "$dotnet_dir"
        gum log -l info "Installing native ARM64 .NET Runtime..."

        # backup existing dotnet folder
        if test -d "$dotnet_dir"
            mv "$dotnet_dir" "$dotnet_dir.bak"
        end

        # download and extract native runtime
        mkdir -p "$dotnet_dir"
        curl -L "$DOTNET_URL" | tar xz -C "$dotnet_dir"

        if test $status -ne 0
            gum log -l error "Failed to install native .NET runtime"
            if test -d "$dotnet_dir.bak"
                rm -rf "$dotnet_dir"
                mv "$dotnet_dir.bak" "$dotnet_dir"
            end
            return 1
        end

        rm -rf "$dotnet_dir.bak"
    end

    gum style --foreground "#9ece6a" "âœ“ Successfully installed tModLoader ARM native libraries"
end

function tmodloader
    clear
    slog info

    # verify we're on arm64 mac
    if test (uname -sm) != "Darwin arm64"
        gum log -l error "This script only works on Apple Silicon Macs"
        return 1
    end

    # ensure terraria is installed and native
    if not test -d "$TERRARIA_APP"
        gum log -l error "Terraria not found at $TERRARIA_APP"
        return 1
    end

    # check if terraria is native by checking binary
    if not file "$TERRARIA_APP/Contents/MacOS/Terraria.bin.osx" | grep -q arm64
        gum log -l warn "Terraria is not running natively. Installing native version first..."
        terraria --force
    end

    # copy native libraries from terraria to tmodloader
    set -l native_libs
    set -a native_libs "libSDL2-2.0.0.dylib"
    set -a native_libs "libFNA3D.0.dylib"
    set -a native_libs "libtheorafile.dylib"
    set -a native_libs "libFAudio.0.dylib"

    for lib in $native_libs
        set -l src "$TERRARIA_APP/Contents/MacOS/osx/$lib"
        set -l dst "$TMODLOADER_DIR/Libraries/Native/OSX/$lib"

        if not test -f "$src"
            gum log -l error "Missing native library: $src"
            return 1
        end

        gum log -l info "Copying $lib..."
        cp -f "$src" "$dst"
    end

    # ensure native dotnet is installed
    if not test -f "$TMODLOADER_DIR/dotnet/dotnet"
        __install_tmodloader_arm
    end

    # set dotnet environment variables
    set -x DOTNET_ROOT "$TMODLOADER_DIR/dotnet"
    set -x PATH "$DOTNET_ROOT:$PATH"

    # force native arm64 execution
    set -x DOTNET_SYSTEM_GLOBALIZATION_INVARIANT 1
    set -x DOTNET_EnableWriteXorExecute 0
    set -x DOTNET_ROLL_FORWARD_TO_PRERELEASE 1

    # native graphics settings
    set -x SDL_VIDEODRIVER metal
    set -x SDL_METAL_FORCE_DIRECT 1
    set -x DYLD_LIBRARY_PATH "$TMODLOADER_DIR/Libraries/Native/OSX"
    set -x DYLD_FRAMEWORK_PATH /System/Library/Frameworks

    # prevent rosetta
    set -x SYSTEM_VERSION_COMPAT 0
    set -x DYLD_SHARED_REGION disabled

    # launch via steam with native runtime
    set -x STEAM_FORCE_NATIVE 1
    gum log -l info "Launching tModLoader with native ARM64 runtime..."
    open "steam://rungameid/1281930"

    # wait for steam to initialize
    sleep 2

    # get pid and setup cleanup
    set pid (pgrep -f "tModLoader.dll|dotnet.*tModLoader" | head -1)

    if test -n "$pid"
        function __cleanup_tmodloader --on-signal INT --inherit-variable pid
            kill $pid 2>/dev/null
            functions -e __cleanup_tmodloader
        end

        while kill -0 $pid 2>/dev/null
            sleep 1
        end

        functions -e __cleanup_tmodloader
    end
end
